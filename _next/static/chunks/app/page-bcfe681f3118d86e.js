(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{6238:(e,n,t)=>{Promise.resolve().then(t.bind(t,7888))},7888:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});var a=t(5155);let s={nodes:[{name:"Ying Forest"},{name:"Tutorial"},{name:"Small Yellow Flower"},{name:"Small White Flower",upgrades:["Health"],items:["Armor","Nuke"]},{name:"Ying Flower"},{name:"Ying Island"},{name:"Ying Air Cube"},{name:"Ying Air"},{name:"Noob Maze"},{name:"I1"},{name:"I2"},{name:"I3"},{name:"Burlington"},{name:"Outer Space"}],edges:{Tutorial:{"Ying Flower":{distance:0}},"Ying Island":{"Ying Air":{distance:0,depth:1},"Ying Forest":{distance:0,depth:1},"Small White Flower":{distance:0,depth:1,note:"Under Tutorial Island"},Tutorial:{distance:0,note:"Inside Tutorial Island"}},"Ying Air":{"Ying Air Cube":{distance:1,depth:1}},"Ying Flower":{"Ying Island":{distance:0,depth:1}},"Outer Space":{"Ying Flower":{distance:100,depth:20}}},root:{name:"Outer Space",depth:4}};var d=t(2115);let i=new Map;for(let e of s.nodes)i.has(e.name)||i.set(e.name,{name:e.name,edges:[],items:e.items,upgrades:e.upgrades});for(let[e,n]of Object.entries(s.edges))for(let[t,a]of Object.entries(n)){let n=i.get(e),s=i.get(t);if(n&&s)n.edges.push({node:s,...a});else throw Error("Both nodes must exist before adding an edge.")}function r(){let[e,n]=(0,d.useState)([{node:i.get(s.root.name),depth:s.root.depth,distance:0}]);function t(){return e[e.length-1].node}return(0,d.useEffect)(()=>{n([...e,...function(e){let n=new Map,a=new Map,s=new Map;for(i.values().forEach(e=>n.set(e,e.name===t().name?0:1/0));n.size;){let[e,t]=n.entries().reduce((e,n)=>e[1]<n[1]?e:n);for(let d of(n.delete(e),a.set(e,t),e.edges))d.distance+t<n.get(d.node)&&(n.set(d.node,d.distance+t),s.set(d.node,e))}let d=[];for(let n=e;s.get(n);n=s.get(n))d.unshift(s.get(n).edges.find(e=>e.node.name==n.name));return d}(i.get("Tutorial"))])},[]),(0,a.jsxs)("div",{id:"base",children:[e.length>1&&(0,a.jsxs)("div",{id:"pathContainer",children:["Path up to root:",(0,a.jsx)("div",{id:"pathList",children:e.slice(0,-1).map((s,d)=>(0,a.jsx)("span",{className:"pathNode",onClick:()=>(function(a){if(1==e.length)throw Error("Node ".concat(t().name," does not have a parent node!"));n(e.slice(0,a+1))})(d),children:s.node.name},"path".concat(d)))})]}),(0,a.jsxs)("div",{id:"current",children:["Current Area: ",t().name]}),t().edges.length>0&&(0,a.jsxs)("div",{id:"descendantsContainer",children:["Areas inside ",t().name,":",(0,a.jsx)("div",{id:"descendantsList",children:t().edges.map((t,s)=>(0,a.jsxs)("span",{className:"descendant",onClick:()=>{n([...e,t])},children:[t.node.name,t.note&&" (".concat(t.note,")")]},"descendant".concat(s)))})]})]})}}},e=>{e.O(0,[441,964,358],()=>e(e.s=6238)),_N_E=e.O()}]);